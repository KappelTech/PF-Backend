name: Deploy Nodejs Application

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout source
        uses: actions/checkout@v4

      # Step 2: Login to Docker Hub
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker build -t bkappel16/progressional-fitness-backend .

      # Step 4: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push bkappel16/progressional-fitness-backend:latest

      # Step 5: Create or Update Kubernetes secrets (if needed)
      # - name: Create Kubernetes secrets
      #   run: |
      #     kubectl create secret generic my-app-secrets \
      #       --from-literal=MONGO_PASSWORD="${{ secrets.MONGO_PASSWORD }}" \
      #       --from-literal=MONGO_USERNAME="${{ secrets.MONGO_USERNAME }}" \
      #       --from-literal=JWT_SECRET="${{ secrets.JWT_SECRET }}" \
      #       --from-literal=GPT_KEY="${{ secrets.GPT_KEY }}" \
      #       --from-literal=NODE_ENV="${{ secrets.NODE_ENV }}" \
      #       --from-literal=FRONTEND_ORIGIN="${{ secrets.FRONTEND_ORIGIN }}" \
      #       --from-literal=PORT="${{ secrets.PORT }}" \
      #       --dry-run=client -o yaml | kubectl apply -f -

      # Step 6: Update Kubernetes Deployment with new image using kubectl-action
      - name: Update Kubernetes Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: set image deployment/pf-api bkappel16/progressional-fitness-backend:latest

      - name: Check Rollout Status
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: rollout status deployment/pf-api
